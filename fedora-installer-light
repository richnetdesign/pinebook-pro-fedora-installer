#! /bin/bash

# *****************************
#       Version 4.0
# *****************************

#Fedora release version as parameter i.e 33
RELEASEVER=${1:-33}

# Set globals
TMPDIR=/var/tmp/fedora-installer
ARCH='aarch64'
CARCH=$(uname -m)
NSPAWN='systemd-nspawn -q --bind-ro=/etc/resolv.conf --timezone=off -D'

# set colorscheme
export DIALOGRC="./dialogrc_gui"

# clearing variables
DEVICE="Pinebook Pro"
EDITION="Fedora Workstation"
USER=""
USERGROUPS=""
FULLNAME=""
PASSWORD=""
CONFIRMPASSWORD=""
CONFIRMROOTPASSWORD=""
ROOTPASSWORD=""
SDCARD=""
SDTYP=""
SDDEV=""
DEV_NAME=""
TIMEZONE=""
LOCALE=""
HOSTNAME=""

# check if root
if [ "$EUID" -ne 0 ]; then
    echo "*******************************************************************************************"
    echo "*                                                                                         *"
    echo "*     This script requires root permissions to run. Please run as root or with sudo!      *"
    echo "*                                                                                         *"
    echo "*******************************************************************************************"
  exit
fi

# Sanity checks for dependencies
declare -a DEPENDNECIES=("wipefs" "sed" "rsync" "systemd-nspawn" "dialog" "openssl" "awk" "mkfs.vfat" "btrfs")

for i in "${DEPENDNECIES[@]}"; do
  if ! [[ -f "/bin/$i" || -f "/sbin/$i" || -f "/usr/bin/$i" || -f "/usr/sbin/$i" ]] ; then
    echo "$i command is missing! Please install the relevant package."
    exit 1
  fi
done

if [[ "$CARCH" != "aarch64" ]]; then
if ! [[ -f "/usr/lib/binfmt.d/qemu-aarch64-static.conf" || -f "/usr/lib/binfmt.d/qemu-static.conf" ]]; then
    echo "qemu-aarch64-static.conf file is missing. Please install the relevant package."
    exit 1
fi
fi


# Functions
msg() {
    ALL_OFF="\e[1;0m"
    BOLD="\e[1;1m"
    GREEN="${BOLD}\e[1;32m"
      local mesg=$1; shift
      printf "${GREEN}==>${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "$@" >&2
 }

info() {
    ALL_OFF="\e[1;0m"
    BOLD="\e[1;1m"
    BLUE="${BOLD}\e[1;34m"
      local mesg=$1; shift
      printf "${BLUE}  ->${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "$@" >&2
 }

usage_build_installer() {
    echo "Usage: ${0##*/} [options]"
    echo '    -h                 This help'
    echo ''
    echo ''
    exit $1
}

get_timer(){
    echo $(date +%s)
}

# $1: start timer
elapsed_time(){
    echo $(echo $1 $(get_timer) | awk '{ printf "%0.2f",($2-$1)/60 }')
}

show_elapsed_time(){
    msg "Time %s: %s minutes..." "$1" "$(elapsed_time $2)"
}

install_fedora() {
    msg "Install Fedora..."

    info "Install core system..."
    dnf --forcearch=aarch64 --installroot=$TMPDIR/fedora --releasever=${releasever} install -y system-release
    dnf --forcearch=aarch64 --installroot=$TMPDIR/fedora --releasever=${releasever} install -y @core --exclude=grub2*,grubby
    info "Install Fedora Workstation..."
    $NSPAWN $TMPDIR/fedora dnf install -y fedora-release-workstation --allowerasing -y
    $NSPAWN $TMPDIR/fedora dnf install -y @arm-tools @base-x @container-management @firefox @libreoffice @networkmanager-submodules @printing @workstation-product @gnome-desktop @multimedia @hardware-support --exclude=@dial-up,@input-methods,@standard,gfs2-utils,reiserfs-utils,initial-setup,initial-setup-gui,libvirt*,gnome-boxes
    
    info "Enable copr..."
    $NSPAWN $TMPDIR/fedora dnf copr enable -y aptupdate/pinebook-pro
    $NSPAWN $TMPDIR/fedora dnf makecache

    info "Install Pinebook Pro packages..."
    $NSPAWN $TMPDIR/fedora dnf install -y kernel-pbp uboot-pinebookpro ap6256-firmware pbp-keyboard-hwdb

    info "Clear dnf cache..."
    $NSPAWN $TMPDIR/fedora dnf clean all 1> /dev/null 2>&1
    
}
	
configure_fedora() {
    msg "Configure Fedora..."
    info "Run SELinux autorelabel all files first boot..."
    touch $TMPDIR/fedora/.autorelabel

    info "Update extlinux.conf and fstab with UUID..."
    # Get UUID
    EFIUUID=$(blkid -s UUID -o value "${SDCARD}${SDDEV}1")
    BOOTUUID=$(blkid -s UUID -o value "${SDCARD}${SDDEV}2")
    ROOTUUID=$(blkid -s UUID -o value "${SDCARD}${SDDEV}3")

    # Configure extlinux.conf
    mkdir ${TMPDIR}/fedora/boot/extlinux/ -p
    echo "LABEL Fedora PinebookPro" > ${TMPDIR}/fedora/boot/extlinux/extlinux.conf 
    echo "KERNEL /Image" >> ${TMPDIR}/fedora/boot/extlinux/extlinux.conf 
    echo "FDT /dtbs/rockchip/rk3399-pinebook-pro.dtb" >> ${TMPDIR}/fedora/boot/extlinux/extlinux.conf 
    echo "INITRD /initramfs-linux.img" >> ${TMPDIR}/fedora/boot/extlinux/extlinux.conf 
    echo "APPEND console=tty1 console=ttyS2,1500000 root=UUID=${ROOTUUID} rw rootflags=subvol=root cma=256M rhgb quiet" >> ${TMPDIR}/fedora/boot/extlinux/extlinux.conf 

    # Edit fstab
    echo "UUID=${ROOTUUID}	/   		btrfs	subvol=root			0 0" > $TMPDIR/fedora/etc/fstab
    echo "UUID=${BOOTUUID}	/boot		ext4	defaults			1 2" >> $TMPDIR/fedora/etc/fstab
    echo "UUID=${EFIUUID}			/boot/efi	vfat	umask=0077,shortname=winnt	0 2" >> $TMPDIR/fedora/etc/fstab
    echo "UUID=${ROOTUUID}	/home   	btrfs	subvol=home			0 0" >> $TMPDIR/fedora/etc/fstab
    
#Enable suspend
#sed -i "s/^action=.*/action=/g" $TMPDIR/fedora/etc/acpi/events/powerconf
sed -i "s/^#SuspendState=.*/SuspendState=freeze/g" $TMPDIR/fedora/etc/systemd/sleep.conf

    info "Set timezone..."
    $NSPAWN $TMPDIR/fedora ln -sf /usr/share/zoneinfo/"$TIMEZONE" /etc/localtime 1> /dev/null 2>&1
    
    info "Set locale..."
    echo "LANG=$LOCALE" | tee --append $TMPDIR/fedora/etc/locale.conf 1> /dev/null 2>&1
    
    info "Set keymap..."
    echo "KEYMAP=$CLIKEYMAP" | tee --append $TMPDIR/fedora/etc/vconsole.conf 1> /dev/null 2>&1
    echo 'Section "InputClass"' > $TMPDIR/fedora/etc/X11/xorg.conf.d/00-keyboard.conf
    echo 'Identifier "system-keyboard"' >> $TMPDIR/fedora/etc/X11/xorg.conf.d/00-keyboard.conf
    echo 'Option "XkbLayout" "us"' >> $TMPDIR/fedora/etc/X11/xorg.conf.d/00-keyboard.conf
    echo 'EndSection' >> $TMPDIR/fedora/etc/X11/xorg.conf.d/00-keyboard.conf
    sed -i s/"us"/"$X11KEYMAP"/ $TMPDIR/fedora/etc/X11/xorg.conf.d/00-keyboard.conf
	
    info "Set hostname..."
    echo "$HOSTNAME" > $TMPDIR/fedora/etc/hostname
	
    info "Setting up users..."
    #setup users
    echo "$USER" > $TMPDIR/user
    echo "$PASSWORD" > $TMPDIR/password
    echo "$ROOTPASSWORD" > $TMPDIR/rootpassword
	
    info "Setting password for root ..."
    echo "$ROOTPASSWORD" > $TMPDIR/rootpassword
    $NSPAWN $TMPDIR/fedora awk -i inplace -F: "BEGIN {OFS=FS;} \$1 == \"root\" {\$2=\"$(openssl passwd -1 $(cat $TMPDIR/rootpassword))\"} 1" /etc/shadow 1> /dev/null 2>&1
	
    info "Adding user..."
    $NSPAWN $TMPDIR/fedora useradd -m -G wheel -p $(openssl passwd -1 $(cat $TMPDIR/password)) -s /bin/bash $(cat $TMPDIR/user) 1> /dev/null 2>&1
    $NSPAWN $TMPDIR/fedora usermod -aG $USERGROUPS $(cat $TMPDIR/user) 1> /dev/null 2>&1
    $NSPAWN $TMPDIR/fedora chfn -f "$FULLNAME" $(cat $TMPDIR/user) 1> /dev/null 2>&1
	
    # Remove temp files on host
    rm -rf $TMPDIR/user $TMPDIR/password $TMPDIR/rootpassword

    msg "$DEVICE $EDITION install complete"
}

partition_card () {
    msg "Getting $SDCARD ready for $DEVICE..."
    # umount SD card
    umount ${SDCARD}$* 1> /dev/null 2>&1
    umount ${SDCARD}$* 1> /dev/null 2>&1
    umount ${SDCARD}$* 1> /dev/null 2>&1
    wipefs -a ${SDCARD} 1> /dev/null 2>&1

    info "Create partitions on $DEV_NAME..."
    #Clear first 32mb
    dd if=/dev/zero of=${SDCARD} bs=1M count=32 1> /dev/null 2>&1

    #partition with efi, boot and root
    echo -e "label:gpt\nunit:sectors\nfirst-lba:32768" | sfdisk ${SDCARD} 1> /dev/null 2>&1
    echo -e "n\n1\n32768\n+512M\nn\n2\n\n+1G\nn\n3\n\n\nt\n1\n1\nx\nA\n2\nr\nw" | fdisk ${SDCARD} 1> /dev/null 2>&1
    
    partprobe -s ${SDCARD}

}

format_card () {
    info "Format partitions on $DEV_NAME"
    mkfs.vfat -F 32 "${SDCARD}${SDDEV}1" -n EFI 1> /dev/null 2>&1
    mkfs.ext4 -F -O ^metadata_csum,^64bit "${SDCARD}${SDDEV}2" -L "${DEV_NAME}-boot" 1> /dev/null 2>&1
    mkfs.btrfs -f "${SDCARD}${SDDEV}3" -L "<FS_TREE>" 1> /dev/null 2>&1
	
    mkdir -p $TMPDIR/fedora
    mount ${SDCARD}${SDDEV}3 $TMPDIR/fedora
    sleep 1
    btrfs subvolume create $TMPDIR/fedora/root 1> /dev/null 2>&1
    btrfs subvolume create $TMPDIR/fedora/home 1> /dev/null 2>&1
    umount $TMPDIR/fedora
    sleep 1
    mount -t btrfs -o subvol=root ${SDCARD}${SDDEV}3 $TMPDIR/fedora
    sleep 1
    mkdir -p $TMPDIR/fedora/home
    mount -t btrfs -o subvol=home ${SDCARD}${SDDEV}3 $TMPDIR/fedora/home
    sleep 1
    mkdir -p $TMPDIR/fedora/boot
    mount ${SDCARD}${SDDEV}2 $TMPDIR/fedora/boot
    sleep 1
    mkdir -p $TMPDIR/fedora/boot/efi
    mount ${SDCARD}${SDDEV}1 $TMPDIR/fedora/boot/efi
}

cleanup () {
    msg "Writing bootloader and cleaning up after install..."
    # Flash bootloader
    dd if=$TMPDIR/fedora/boot/idbloader.img of=${SDCARD} seek=64 conv=notrunc,fsync 1> /dev/null 2>&1
    dd if=$TMPDIR/fedora/boot/u-boot.itb of=${SDCARD} seek=16384 conv=notrunc,fsync 1> /dev/null 2>&1
    	
    #clean up
	umount $TMPDIR/fedora/boot/efi
	umount $TMPDIR/fedora/boot
	umount $TMPDIR/fedora/home
	umount $TMPDIR/fedora
	partprobe $SDCARD 1> /dev/null 2>&1
	rm -rf $TMPDIR
}

if [ ! -z "$EDITION" ]; then
	USER=$(dialog --clear --title "Fedora PinebookPro Installer" \
	--inputbox "Enter the username you want:
(usernames most be all lowercase)" 8 50 \
	3>&1 1>&2 2>&3 3>&-)
    if [[ "$USER" =~ [A-Z] ]] || [[ "$USER" == *['!'@#\$%^\&*()_+]* ]]; then
    clear
    msg "Configuration aborted! Username contained invalid characters."
    exit 1
    fi
else 
	clear
	exit 1
fi

if [ ! -z "$USER" ]
then
FULLNAME=$(dialog --clear --title "Fedora PinebookPro Installer" \
    --inputbox "Enter desired Full Name for $USER:" 8 50 \
        3>&1 1>&2 2>&3 3>&- \
	)
else
    clear
    exit 1
fi

if [ ! -z "$FULLNAME" ]; then
	PASSWORD=$(dialog --clear --title "Fedora PinebookPro Installer" \
	--insecure --passwordbox "Enter new Password for $USER:" 8 50 \
	3>&1 1>&2 2>&3 3>&- \
	)
else 
	clear
	exit 1
fi

if [ ! -z "$PASSWORD" ]; then
	CONFIRMPASSWORD=$(dialog --clear --title "Fedora PinebookPro Installer" \
	--insecure --passwordbox "Confirm new Password for $USER:" 8 50 \
	3>&1 1>&2 2>&3 3>&- \
	)
else 
	clear
	exit 1
fi

if [[ "$PASSWORD" != "$CONFIRMPASSWORD" ]]; then
	clear
	msg "User passwords do not match! Please restart the installer and try again."
	exit 1
fi

if [ ! -z "$CONFIRMPASSWORD" ]; then
	ROOTPASSWORD=$(dialog --clear --title "Fedora PinebookPro Installer" \
	--insecure --passwordbox "Enter new Root Password:" 8 50 \
	3>&1 1>&2 2>&3 3>&- \
	)
else 
	clear
	exit 1
fi

if [ ! -z "$ROOTPASSWORD" ]; then
	CONFIRMROOTPASSWORD=$(dialog --clear --title "Fedora PinebookPro Installer" \
	--insecure --passwordbox "Confirm new Root Password:" 8 50 \
	3>&1 1>&2 2>&3 3>&- \
	)
else 
	clear
	exit 1
fi

if [[ "$ROOTPASSWORD" != "$CONFIRMROOTPASSWORD" ]]; then
	clear
	msg "Root passwords do not match! Please restart the installer and try again."
	exit 1
fi

if [ ! -z "$CONFIRMROOTPASSWORD" ]
then

# simple command to put the results of lsblk (just the names of the devices) into an array and make that array populate the options	
	let i=0
	W=()
	while read -r line; do
		let i=$i+1
		W+=($line "")
	done < <( lsblk -dn -o NAME )
	SDCARD=$(dialog --title "Fedora PinebookPro Installer" \
	--menu "Choose your SDCard/eMMC/USB - Be sure the correct drive is selected! 
WARNING! This WILL destroy the data on it!" 20 50 10 \
	"${W[@]}" 3>&2 2>&1 1>&3)

# add /dev/ to the selected option above
	DEV_NAME=$SDCARD
	SDCARD=/dev/$SDCARD
	SDTYP=${SDCARD:5:2}
else 
	clear
	exit 1
fi

	if [[ "$SDTYP" = "sd" || "$SDTYP" = "vd" ]]; then
	SDDEV=""
elif [[ "$SDTYP" = "mm" ]]; then
	SDDEV="p"
elif [[ "$SDTYP" = "nv" ]]; then
	SDDEV="n1p"
else 
	clear
	exit 1
fi


if [ ! -z "$SDCARD" ]; then
	let i=0
	W=()
	while read -r line; do
		let i=$i+1
		W+=($line "")
	done < <( timedatectl list-timezones )
	TIMEZONE=$(dialog --clear --title "Fedora PinebookPro Installer" \
	--menu "Choose your timezone!" 20 50 15 \
	"${W[@]}" 3>&1 1>&2 2>&3 3>&- \
	)
else 
	clear
	exit 1
fi


if [ ! -z "$TIMEZONE" ]; then
	let i=0
	W=()
	while read -r line; do
		let i=$i+1
		W+=($line "")
	done < <( localectl list-locales )
	LOCALE=$(dialog --clear --title "Fedora PinebookPro Installer" \
		--menu "Choose your locale!" 20 50 15 \
		"${W[@]}" 3>&1 1>&2 2>&3 3>&- \
		)
else 
	clear
	exit 1
fi

if [ ! -z "$LOCALE" ]; then
	let i=0
	W=()
	while read -r line; do
		let i=$i+1
		W+=($line "")
	done < <( localectl list-keymaps )
	CLIKEYMAP=$(dialog --clear --title "Fedora PinebookPro Installer" \
		--menu "Choose your TTY keyboard layout:" 20 50 15 \
		"${W[@]}" 3>&1 1>&2 2>&3 3>&- \
	)
else 
	clear
	exit 1
fi

if [ ! -z "$CLIKEYMAP" ]; then
	let i=0
	W=()
	while read -r line; do
		let i=$i+1
		W+=($line "")
	done < <( localectl list-x11-keymap-layouts )
	X11KEYMAP=$(dialog --clear --title "Manjaro ARM Installer" \
		--menu "Choose your X11 keyboard layout:" 20 50 15 \
		"${W[@]}" 3>&1 1>&2 2>&3 3>&- \
	)
else 
	clear
	exit 1
fi

if [ ! -z "$CLIKEYMAP" ]; then
	HOSTNAME=$(dialog --clear --title "Fedora PinebookPro Installer" \
	--inputbox "Enter desired hostname (fqdn) for this system:" 8 50 \
	3>&1 1>&2 2>&3 3>&- \
	)
else 
	clear
	exit 1
fi

if [ ! -z "$HOSTNAME" ]; then
	dialog --clear --title "Fedora PinebookPro Installer" \
    --yesno "Is the below information correct:
    Device = $DEVICE
    Edition = $EDITION
    Username = $USER
    Additional usergroups = $USERGROUPS
    Password for $USER = (password hidden)
    Password for root = (password hidden)
    SDCard/eMMC/USB = $SDCARD
    Timezone = $TIMEZONE
    Locale = $LOCALE
    Keyboard layout = $CLIKEYMAP
    Hostname = $HOSTNAME" 20 70 \
    3>&1 1>&2 2>&3 3>&-
else
	clear
	exit 1
fi

response=$?
case $response in
   0) clear; msg "Installation started....";;
   1) clear; msg "Installation aborted...."; exit 1;;
   255) clear; msg "Installation aborted..."; exit 1;;
esac

# Commands
timer_start=$(get_timer)

partition_card
format_card
install_fedora
configure_fedora
cleanup
show_elapsed_time "${FUNCNAME}" "${timer_start}"
sync

